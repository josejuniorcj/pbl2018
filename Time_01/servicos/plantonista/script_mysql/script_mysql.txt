--APAGANDO A TABELA PACIENTE 
DROP TABLE PACIENTE;

--CRIAR TABELA PACIENTE
  CREATE TABLE PACIENTE
(
  ID_PAC INT(11) primary KEY auto_increment,
  NOME_PAC CHAR(100) NOT NULL,
  CPF_PAC CHAR(14) NOT NULL,
  RG_PAC CHAR(12) NOT NULL,
  TELEFONE_PAC CHAR(17) NOT NULL,
  SUS_PAC CHAR(16) NOT NULL,
  HASHBC_PAC CHAR(64) NOT NULL,
  OBJETO_PAC TEXT NOT NULL
);


--CRIAR TABELA PACIENTE_LOG
create TABLE PACIENTE_LOG
(
  ID_PAC INT(11) auto_increment,
  DATA_LOG timestamp,
  constraint paciente_log_fk foreign key(id_pac) references paciente(id_pac)
);

--CRIANDO A TRIGGER LOG_PACIENTE
DELIMITER $$
CREATE TRIGGER LOG_PACIENTE AFTER INSERT 
ON PACIENTE
FOR EACH ROW
BEGIN
  INSERT INTO paciente_log (DATA_LOG) values (current_timestamp()); 
END $$
DELIMITER ;


--CRIANDO A VIEW V_PACIENTE_AUD
CREATE OR REPLACE VIEW V_PACIENTE_AUD AS SELECT paciente.NOME_PAC, paciente.SUS_PAC, paciente_log.DATA_LOG from paciente, paciente_log where paciente.ID_PAC = paciente_log.ID_PAC;


--APAGANDO A PROCEDURE INSERT_TAB_PACIENTE
DROP INSERT_TAB_PACIENTE;

--PROCEDURE PARA INSERIR  NA TABELA PACIENTE
DELIMITER $$
CREATE PROCEDURE INSERT_TAB_PACIENTE ( NOME_PAC CHAR(100),CPF_PAC CHAR(14),RG_PAC CHAR(12),TELEFONE_PAC CHAR(17),SUS_PAC CHAR(16),HASHBC_PAC CHAR(64),OBJETO_PAC TEXT)
BEGIN
  INSERT INTO PACIENTE (NOME_PAC, CPF_PAC, RG_PAC, TELEFONE_PAC, SUS_PAC, HASHBC_PAC, OBJETO_PAC) VALUES
(NOME_PAC, CPF_PAC, RG_PAC, TELEFONE_PAC, SUS_PAC, HASHBC_PAC, OBJETO_PAC);
  COMMIT;
END $$
DELIMITER ;


--CHAMANDO A SP INSERT_TAB_PACIENTE
CALL INSERT_TAB_PACIENTE ('JOAO CARLOS', '111.111.111-11', '11.111.111-1', '99999-9999','1111', 'A2C3B4D5F6B4C', 'OBJ1');













